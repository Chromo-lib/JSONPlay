[{"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\App.js":"1","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\ListHistory.js":"2","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\Output.js":"3","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\Sender.js":"4","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\SplitWrapper.js":"5","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\index.js":"6","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\state\\GlobalProvider.js":"7","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\utils\\formatSize.js":"8"},{"size":695,"mtime":1608656989246,"results":"9","hashOfConfig":"10"},{"size":1965,"mtime":1610456126352,"results":"11","hashOfConfig":"10"},{"size":2792,"mtime":1610455178310,"results":"12","hashOfConfig":"10"},{"size":2032,"mtime":1610451292810,"results":"13","hashOfConfig":"10"},{"size":355,"mtime":1608118379910,"results":"14","hashOfConfig":"10"},{"size":219,"mtime":1610449224009,"results":"15","hashOfConfig":"10"},{"size":638,"mtime":1610454034821,"results":"16","hashOfConfig":"10"},{"size":218,"mtime":1606064866310,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"26lr14",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\App.js",["36"],"import ListHistory from \"./components/ListHistory\";\nimport Output from \"./components/Output\";\nimport Sender from \"./components/Sender\";\nimport { GlobalProvider } from \"./state/GlobalProvider\";\nimport Split from 'react-split';\nimport SplitWrapper from './components/SplitWrapper';\n\nfunction App () {\n  return (\n    <GlobalProvider>\n      <main>\n        <SplitWrapper          \n          options={{\n            sizes:[17,43,40],\n            minSize: 10,\n            direction: \"vertical\"\n          }}\n          cls=\"split-wrapper\"\n        >\n          <ListHistory />\n          <Sender />\n          <Output />\n        </SplitWrapper>\n      </main>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\ListHistory.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\Output.js",["37"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { GlobalContext } from '../state/GlobalProvider';\r\nimport axios from 'axios';\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-json5\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\n\r\nimport formatSize from '../utils/formatSize';\r\n\r\nexport default function Output () {\r\n\r\n  const { globalState, setGlobalState } = useContext(GlobalContext);\r\n  const [state, setState] = useState({\r\n    output: '',\r\n    headers: '',\r\n    infos: {\r\n      status: 200,\r\n      statusText: '',\r\n      time: '0',\r\n      size: '0 bytes'\r\n    },\r\n    errors: 'No errors'\r\n  });\r\n\r\n  const [currentTab, setCurrentTab] = useState('output');\r\n\r\n  useEffect(() => {\r\n    const { url, method, data, isDataSubmitted } = globalState.sender;\r\n\r\n    if (isDataSubmitted) {\r\n      let startTime = Date.now();\r\n      let options = { url, method };\r\n\r\n      if (data && Object.keys(data).length > 0) {\r\n        options = { url, method, data: data };\r\n      }\r\n\r\n      axios(options)\r\n        .then(rsp => {\r\n          let sender = { ...globalState.sender, isDataSubmitted: false };\r\n\r\n          let tmpH = globalState.history.slice(0);\r\n\r\n          if (!tmpH.find(h => h.sender.method === options.method && h.url === options.url)) {\r\n            tmpH.unshift({\r\n              sender,\r\n              url: options.url,\r\n              date: new Date().toString()\r\n            });\r\n          }\r\n\r\n          setGlobalState({ ...globalState, sender, history: tmpH });\r\n\r\n          setState({\r\n            output: rsp.data,\r\n            headers: rsp.headers,\r\n            infos: {\r\n              status: rsp.status,\r\n              statusText: rsp.statusText,\r\n              time: Date.now() - startTime + ' ms',\r\n              size: formatSize(JSON.stringify(rsp.data).length)\r\n            },\r\n            errors: 'No errors'\r\n          });\r\n        })\r\n        .catch(e => {\r\n          setState({ ...state, errors: e });\r\n        });\r\n    }\r\n  }, [globalState.sender.isDataSubmitted, globalState.sender.url]);\r\n\r\n  const onTab = tabName => {\r\n    setCurrentTab(tabName);\r\n  }\r\n\r\n  return (<div className=\"container\">\r\n    <header>\r\n      {Object.keys(state).map((tabName) => {\r\n        return <span className={\"badge \" + (tabName === currentTab ? 'txt-white' : '')}\r\n          key={tabName} onClick={() => { onTab(tabName) }}>{tabName}</span>\r\n      })}\r\n    </header>\r\n\r\n    <div className=\"content p-0\">\r\n      <AceEditor\r\n        mode=\"json5\"\r\n        theme=\"monokai\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        value={JSON.stringify(state[currentTab], '\\n', 2)}\r\n        name=\"ace-json-editor\"\r\n        editorProps={{ $blockScrolling: true }}\r\n        highlightActiveLine={false}\r\n      />\r\n    </div>\r\n  </div>);\r\n}","C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\Sender.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\components\\SplitWrapper.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\index.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\state\\GlobalProvider.js",[],"C:\\Users\\haike\\Documents\\browser-extensions\\1-completed\\jsonplay\\src\\utils\\formatSize.js",[],{"ruleId":"38","severity":1,"message":"39","line":5,"column":8,"nodeType":"40","messageId":"41","endLine":5,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":70,"column":6,"nodeType":"44","endLine":70,"endColumn":66,"suggestions":"45"},"no-unused-vars","'Split' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'globalState', 'setGlobalState', and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["46"],{"desc":"47","fix":"48"},"Update the dependencies array to be: [globalState, globalState.sender.isDataSubmitted, globalState.sender.url, setGlobalState, state]",{"range":"49","text":"50"},[2009,2069],"[globalState, globalState.sender.isDataSubmitted, globalState.sender.url, setGlobalState, state]"]